@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using Blazor.Extensions
@using Blazor.Extensions.Canvas.Canvas2D
@using Common;
@using Drawfael.Services
@using Drawfael.Components;
@inject IJSRuntime jsRuntime;
@inject BoardService boardService;

<h1>Draw</h1>
<table class="draw-table">
    <tbody>
        @for (var i = 0; i < ORIG_SIZE; i++)
        {
            <tr class="draw-table-tr">
                @for (var j = 0; j < ORIG_SIZE; j++)
                {
                    <td style="position:relative;" class="draw-table-td">
                       <CellComponenet OnSelect="CellSelectedEvent" Id="@MakeId(i,j)"></CellComponenet>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@code {
    private const int ORIG_SIZE = 20;
    private const int SCALE = 5;
    public CellComponenet? SelectedCell { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //var board = boardService.GetBoard();
        boardService.CellChanged += StaleCell;
    }

    private async Task CellSelectedEvent(CellComponenet cell)
    {
        SelectedCell?.Revert();
        SelectedCell = cell;
    }

    private void StaleCell(object sender, Cell cell)
    {
        if(SelectedCell?.X == cell.Cords.x && SelectedCell?.Y == cell.Cords.y)
        {
            SelectedCell?.Stale();
            SelectedCell = null;
        }
    }

    private string MakeId(int x, int y)
    {
        return $"{x}_{y}";
    }
}
